<?xml version="1.0" encoding="UTF-8"?>
<chapter id="repeater">
	<title>数字中继</title>
<section id="digital">
	<title>数字中继联网方案</title>
	<ulink url="images/repeater/digital.png">
		<graphic  format="png" fileref="images/repeater/digital.png" srccredit="neo" />
	</ulink>
	<sidebar>
		<title>设备列表</title>
		<para>天线，馈线，双工器</para>
		<para>MOTOTRBO™ DR 3000 Repeater</para>
		<para>一台有公网IP的VPN服务器， 配置没有特别要求</para>
		<para>两台VPN客户端，需要两个网口。不需要公网IP</para>
		<para>网线，水晶头，工具等等</para>
	</sidebar>
	<sidebar>
		<title>需求描述</title>
		<para>一期，迫切解决的问题：</para>
		<orderedlist>
			<listitem><para>将目前已建成的两部数字中继通过TCP/IP互连</para></listitem>
			<listitem><para>实现手持机在中继网间漫游</para></listitem>
			<listitem><para>实现分组呼叫</para></listitem>
		</orderedlist>
		<para>同时要考虑到后面的扩容问题：</para>
		<orderedlist>
			<listitem><para>与其他临近城市的互通问题。</para></listitem>
			<listitem><para>APRS</para></listitem>
			<listitem><para>YY或Echolink 接入问题</para></listitem>
			<listitem><para>与模拟网的互通问题</para></listitem>
			<listitem><para>与Voip协议SIP或H.323互通</para></listitem>
			<listitem><para>中继录音域mp3流服务器播放</para></listitem>
		</orderedlist>
	</sidebar>
	<sidebar>
		<title>背景</title>
		<para>互连 DR-3000中继需要公网IP，无法使用动态IP技术。</para>
		<para>通过VPN技术建立虚拟专用网实现两个中继相互通信，同时VPN服务器也可以采用动态IP+域名的方案，定时将IP地址更新到域名服务器，然后VPN客户端通过域名与VPN服务器建立连接。实现两台中继的网络互通。</para>
		<para>允许多个VPN客户端与服务器建立连接，这样就解决了扩容问题。</para>
	</sidebar>
	<sidebar>
		<title>频率与时隙规划</title>
		<para>采用异频同播模式</para>
		<para>1号中继：439.790 -5 12 1 </para>
		<para>2号中继：439.200 -5 12 1 </para>
	</sidebar>
	<sidebar>
		<title>IP地址规划</title>
		<para>LAN IP: 172.16.0.0/24</para>
		<para>VPN IP: 10.8.0.0/24</para>

		<para>1号中继：172.16.0.1/24 </para>
		<para>2号中继：172.16.0.2/24 </para>
		<para>控制台：172.16.0.254/24 </para>
	</sidebar>
	<sidebar>
		<title>物理网络拓扑图</title>
		<screen>
		<![CDATA[
                                      .-----------------------------> tun0  [ VPN Server ] tun0 <-----------------------.
                                     /                                            |                                      \
                                    /                                          Switch                                     \
                                    |                                             |                                        \
                                    |                                          Router                                       |
                                    V                                             ^                                         V
                                   tun0                                           |                                        tun0
天线 ---> 双工器 ---> 中继台 ---> eth1 [VPN Client] eth0 ---> Switch ---> Router ---> ( WAN ) <--- Router <--- Switch <--- eth0 [VPN Client] eth1 <--- 中继台 <--- 双工器  <--- 天线
		]]>
		</screen>
		<para>client tun0 与 server tun0通过tun0虚拟接口 建立了一条虚拟链路，实际上仍然通过eth0物理链路与服务器连接。通过路由表的走向可以将172.16.0.0/24网络打通。</para>
	</sidebar>
	<sidebar>
		<title>VPN服务器与客户端</title>
		<para>操作系统 <ulink url="http://www.centos.org/">CentOS-6.5-x86_64-minimal.iso</ulink></para>
		<para>分区规划，适合VPN服务器与客户端:</para>
		<itemizedlist>
			<listitem><para>/ 分区 50G</para></listitem>
			<listitem><para>Swap 分区 内存*2，如果大于16G内存，使用与内存相等即可</para></listitem>
			<listitem><para>其他暂时保留</para></listitem>
		</itemizedlist>
	</sidebar>
</section>

<section id="openvpn">
	<title>VPN服务器</title>
	<para>请参考下面安装</para>
	<para><ulink url="http://netkiller.github.io/linux/network/vpn/index.html#openvpn" /></para>
	<para><ulink url="http://netkiller.github.io/centos/network/openvpn.html" /></para>
	<section>
		<title>服务器端</title>
		<para>启用IP转发</para>
		<screen>
# vim /etc/sysctl.conf
# Controls IP packet forwarding
net.ipv4.ip_forward = 1
		</screen>
		<para>net.ipv4.ip_forward = 1 使IP转发生效</para>
		<screen>
sysctl -w net.ipv4.ip_forward=1
		</screen>
		<para>安装openvpn按顺序运行即可</para>
		<screen>
		<![CDATA[
yum install openvpn easy-rsa -y
chkconfig openvpn on

cp /usr/share/doc/openvpn-2.3.2/sample/sample-config-files/server.conf /etc/openvpn/
cd /usr/share/easy-rsa/2.0

cat >> vars <<EOF
# Add by BG7NYT
export KEY_COUNTRY="CN"
export KEY_PROVINCE="GD"
export KEY_CITY="Shenzhen"
export KEY_ORG="Personal Amateur Radiostations of P.R.China"
export KEY_EMAIL="bg7nyt@163.com"
export KEY_CN=http://netkiller.github.io
export KEY_NAME=BG7NYT
export KEY_OU=Mototrbo
EOF

source ./vars
./clean-all
./build-ca
./build-key-server server
./build-dh
./build-key node1
./build-key node2

cp keys/ca.key keys/ca.crt keys/dh1024.pem keys/server.key keys/server.crt /etc/openvpn/

service openvpn start

iptables -A INPUT -p udp --dport 1194 -j ACCEPT
		]]>
		</screen>
		
	</section>
	<section>
		<title>中继节点端</title>
		<para>启用IP转发</para>
		<screen>
# vim /etc/sysctl.conf
# Controls IP packet forwarding
net.ipv4.ip_forward = 1
		</screen>
		<para>net.ipv4.ip_forward = 1 使IP转发生效</para>
		<screen>
sysctl -w net.ipv4.ip_forward=1
		</screen>
		<para>安装openvpn客户端</para>
		<screen>
		<![CDATA[
yum install openvpn -y
chkconfig openvpn on
cp /usr/share/doc/openvpn-2.3.2/sample/sample-config-files/client.conf /etc/openvpn/
		]]>
		</screen>
		<para>将build-key生成的节点证书复制到节点服务器/etc/openvpn/目录中</para>
		<screen>
cp keys/ca.crt keys/node1.key keys/node1.crt /etc/openvpn/
		</screen>
		<para>启动openvpn客户端</para>
		<screen>
service openvpn start
		</screen>
	</section>
	<section>
		<title>测试vpn是否可用</title>
		<para>3台linux服务器运行openvpn服务后可以看到一个tun0网络适配器，我们相互ping对方的tun0上的IP地址即可，正常应该全部都通，不通请查看防火墙配置。</para>
		<para>服务器tun0状态</para>
		<screen>
# ifconfig tun0
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00
          inet addr:10.8.0.1  P-t-P:10.8.0.2  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:4 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100
          RX bytes:240 (240.0 b)  TX bytes:0 (0.0 b)
		</screen>
		<para>节点1的 tun0</para>
		<screen>
# ifconfig tun0
tun0      Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00
          inet addr:10.8.0.10  P-t-P:10.8.0.9  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:22 errors:0 dropped:0 overruns:0 frame:0
          TX packets:25 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100
          RX bytes:2257 (2.2 KiB)  TX bytes:3757 (3.6 KiB)
		</screen>
		<para>服务器到节点</para>
		<screen>
# ping 10.8.0.6 -c3
PING 10.8.0.6 (10.8.0.6) 56(84) bytes of data.
64 bytes from 10.8.0.6: icmp_seq=1 ttl=128 time=20.9 ms
64 bytes from 10.8.0.6: icmp_seq=2 ttl=128 time=20.1 ms
64 bytes from 10.8.0.6: icmp_seq=3 ttl=128 time=20.1 ms

--- 10.8.0.6 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2001ms
rtt min/avg/max/mdev = 20.118/20.414/20.939/0.389 ms


# ping 10.8.0.10 -c3
PING 10.8.0.10 (10.8.0.10) 56(84) bytes of data.
64 bytes from 10.8.0.10: icmp_seq=1 ttl=64 time=14.4 ms
64 bytes from 10.8.0.10: icmp_seq=2 ttl=64 time=17.0 ms
64 bytes from 10.8.0.10: icmp_seq=3 ttl=64 time=14.0 ms

--- 10.8.0.10 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2000ms
rtt min/avg/max/mdev = 14.068/15.170/17.005/1.313 ms

		</screen>
		<para>节点到服务器</para>
		<screen>
# ping 10.8.0.1 -c3
PING 10.8.0.1 (10.8.0.1) 56(84) bytes of data.
64 bytes from 10.8.0.1: icmp_seq=1 ttl=64 time=14.0 ms
64 bytes from 10.8.0.1: icmp_seq=2 ttl=64 time=14.0 ms
64 bytes from 10.8.0.1: icmp_seq=3 ttl=64 time=15.8 ms

--- 10.8.0.1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2018ms
rtt min/avg/max/mdev = 14.006/14.618/15.831/0.857 ms
		</screen>
		<para>节点到节点</para>
		<screen>
# ping 10.8.0.6 -c3
PING 10.8.0.6 (10.8.0.6) 56(84) bytes of data.
64 bytes from 10.8.0.6: icmp_seq=1 ttl=128 time=34.1 ms
64 bytes from 10.8.0.6: icmp_seq=2 ttl=128 time=36.6 ms
64 bytes from 10.8.0.6: icmp_seq=3 ttl=128 time=33.0 ms

--- 10.8.0.6 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2036ms
rtt min/avg/max/mdev = 33.047/34.605/36.654/1.520 ms
		</screen>
	</section>
</section>
<section id="firmware">
	<title>Motorola XiR R8200 固件升级教程</title>
	<para>首先安装附件文件，直接运行“MOTOTRBO_R023002_130005_Repeater.exe”即可</para>
	<para>进入CPS去读中继配置</para>
	<graphic  format="png" fileref="images/repeater/update/cps.jpg" srccredit="neo" />
	<para>进入设备菜单，选择升级</para>
	<graphic  format="png" fileref="images/repeater/update/device.jpg" srccredit="neo" />
	<para>可用的固件列表</para>
	<graphic  format="png" fileref="images/repeater/update/package.jpg" srccredit="neo" />
	<para>选择固件</para>
	<graphic  format="png" fileref="images/repeater/update/firmware.jpg" srccredit="neo" />
	<para>点击“OK”按钮，漫长的等待</para>
	<para>注意：升级固件，不会清空你的配给配置</para>
</section>
<section id="link">
	<title>Link Establishment(建立IP链路)</title>
	<para>准备工作</para>
	<para>主站点IP地址 192.168.6.1</para>
	<para>节点点IP地址 192.168.6.2 一次类推</para>
	<para>我们将中继的一时隙用作IP链路连接，二时隙用作本地通话，这样能做到两个时隙互不影响。</para>
	<section>
		<title>Master(主站设置)</title>
		<para>首先设置主站点名称与Radio ID, Site ID</para>
		<graphic  format="png" fileref="images/repeater/link/general.jpg" srccredit="neo" />
		<para>设置主站IP地址，注意Master IP为空，我们使用默认的50000端口，注意是UDP协议</para>
		<graphic  format="png" fileref="images/repeater/link/master.jpg" srccredit="neo" />
		<para>设置频道，色吗12, IP Site Connect 选择1时隙，如果你想让两个时隙都工作可以选择 Slot 1 and Slot 2。然后填写RX频率，Offset 是差频-5，然后点击“Copy”按钮</para>
		<graphic  format="png" fileref="images/repeater/link/channel.jpg" srccredit="neo" />
		<para>最后将配置写入中继</para>
	</section>
	<section>
		<title>Peer(从站设置)</title>
		<para>设置从站点名称与Radio ID, Site ID 每个ID都不能重复，需要你建站的时候规划好，依次加一即可</para>
		<graphic  format="png" fileref="images/repeater/link/peer-general.jpg" srccredit="neo" />
		<para>从站需要填写Master IP, 然后设置从站的IP地址</para>
		<graphic  format="png" fileref="images/repeater/link/peer.jpg" srccredit="neo" />
		<para>从站是可以使用DHCP获取IP地址</para>
		<graphic  format="png" fileref="images/repeater/link/peer-dhcp.jpg" srccredit="neo" />
		<para>设置频道</para>
		<graphic  format="png" fileref="images/repeater/link/peer-channel.jpg" srccredit="neo" />
	</section>
</section>
</chapter>

<chapter id="analog">
	<title>模拟中继</title>
<!--
	<ulink url="images/repeater/analog.png">
		<graphic  format="png" fileref="images/repeater/analog.png" srccredit="neo" width="1024"/>
	</ulink>
 -->
</chapter>